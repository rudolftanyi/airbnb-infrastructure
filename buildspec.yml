# buildspec.yml file to build the docker application
# Env variables required $REPOSITORY_URI

version: 0.2
phases:
  install:
    commands:
      - echo "Install Phase - Nothing to do using latest Amazon Linux Docker Image for CodeBuild which has all AWS Tools - https://github.com/aws/aws-codebuild-docker-images/blob/master/al2/x86_64/standard/3.0/Dockerfile"
      # https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html      
  pre_build:
      commands:
        # Verify AWS CLI Version        
        - echo "Verify AWS CLI Version..."
        - aws --version

        # Login to ECR Registry for docker to push the image to ECR Repository
        - echo "Login in to Amazon ECR..."
        - $(aws ecr get-login --no-include-email)

        # Docker Image Tag with Date Time & Code Buiild Resolved Source Version
        - echo "Creating the dynamic TAG to mark the docker image"
        - TAG="$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        - echo "The full URI of the image - $REPOSITORY_URI:$TAG"
  build:
    commands:
      # Build Docker Image
      - echo "Build started on `date`"
      - echo "Building the Docker image..."
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$TAG   
  post_build:
    commands:
      # Push Docker Image to ECR Repository
      - echo "Build completed on `date`"
      - echo "Pushing the Docker image to ECR Repository"
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$TAG      
      - echo "Docker Image Push to ECR Completed -  $REPOSITORY_URI:$TAG & $REPOSITORY_URI:latest"      
      # The name as has to be same as the container name the task definition
      - printf '[{"name":"ecs-demo-service","imageUri":"%s"}]' $REPOSITORY_URI:$TAG > imagedefinitions.json
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$TAG > imageDetail.json

artifacts:
  files: 
    - 'imagedefinitions.json'
    - 'imageDetail.json'
    - 'appspec.yml'
    - 'taskdef.json'
  secondary-artifacts:
    DefinitionArtifact:
      files:        
        - appspec.yml
        - taskdef.json
    ImageArtifact:
      files:
        - imagedefinitions.json
        - imageDetail.json